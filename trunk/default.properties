<?xml version="1.0"?>
<project xmlns="http://nant.sf.net/release/0.86-beta1/nant.xsd">

	<property name="nant.settings.currentframework"
			  value="net-3.5" />

	<!-- Base directories.
	________________________________________________________________________________________________________________ -->
	<property name="basedir.app"
			  value="${path::combine(project::get-base-directory(), 'source\app')}"
			  overwrite="false"  />

	<property name="basedir.test"
			  value="${path::combine(project::get-base-directory(), 'source\test')}"
			  overwrite="false"  />

	<property name="basedir.test.results"
			  value="${path::combine(project::get-base-directory(), 'test-results')}"
			  overwrite="false" />

	<property name="basedir.deployment.artifacts"
			  value="${path::combine(project::get-base-directory(), 'deploy')}"
			  overwrite="false"  />

	<property name="basedir.deployment.targetpath"
			  value=""
			  overwrite="false"  />

	<property name="basedir.database"
			  value="${path::combine(project::get-base-directory(), 'source\database')}"
			  overwrite="false"  />

	<property name="basedir.temp"
			  value="${path::combine(project::get-base-directory(), 'temp')}"
			  overwrite="false"  />

	<!-- Build configuration.
	________________________________________________________________________________________________________________ -->
	<property name="build.msbuild.target"
			  value="Build"
			  overwrite="false"  />

	<property name="build.msbuild.configuration"
			  value="Debug"
			  overwrite="false" />

	<property name="build.msbuild.verbosity"
			  value="Minimal"
			  overwrite="false" />

	<property name="build.msbuild.solutiondir"
			  value="${path::combine(project::get-base-directory(), 'source\\')}"
			  overwrite="false" />

	<!-- Tools.
	________________________________________________________________________________________________________________ -->
	<property name="tools.mbunit"
			  value="${path::combine(project::get-base-directory(), 'tools\MbUnit')}"
			  unless="${property::exists('tools.mbunit')}" />

	<property name="tools.mbunit.report.type"
			  value="html"
			  overwrite="false" />

	<property name="tools.sqlpub"
			  value="${path::combine(project::get-base-directory(), 'tools\SqlPub')}"
			  overwrite="false" />

	<!-- Database configuration.
	________________________________________________________________________________________________________________ -->
	<property name="database.name"
			  value="Graffiti_Test_${string::replace(project::get-name(), '-', '_')}"
			  overwrite="false"  />

	<property name="database.server"
			  value="(local)"
			  overwrite="false"  />

	<property name="database.auth.integrated"
			  value="true"
			  overwrite="false" />

	<property name="database.auth.username"
			  value="foo"
			  overwrite="false"  />

	<property name="database.auth.password"
			  value="foo"
			  overwrite="false"  />

	<property name="database.connectionstring"
			  value="Data Source=${database.server}; Initial Catalog=${database.name}; Integrated Security=true; Persist Security Info=false;"
			  if="${bool::parse(database.auth.integrated) == true}"
			  overwrite="false"  />

	<property name="database.connectionstring"
			  value="Data Source=${database.server}; Initial Catalog=${database.name}; User ID=${database.auth.username}; Password=${database.auth.password};"
			  if="${bool::parse(database.auth.integrated) == false}"
			  overwrite="false"  />

	<property name="database.connectionstring.oledb"
			  value="Provider=SQLNCLI.1; ${string::replace(database.connectionstring, 'Integrated Security=true;', 'Integrated Security=SSPI;')}"
			  overwrite="false"  />

	<!-- Build number.
	________________________________________________________________________________________________________________ -->
	<!-- Use build number from source\VersionInfo.cs. -->
	<call target="get-build-number-from-file" />

	<property name="build.number"
			  value="${build.number.fromfile}"
			  if="${not environment::variable-exists('BUILD_NUMBER') and not property::exists('build.number')}" />

	<!-- Use build number from environment variable. -->
	<property name="build.number"
			  value="${environment::get-variable('BUILD_NUMBER')}"
			  if="${environment::variable-exists('BUILD_NUMBER') and not property::exists('build.number')}" />
</project>