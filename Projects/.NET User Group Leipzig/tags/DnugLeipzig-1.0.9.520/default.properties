<?xml version="1.0"?>
<project xmlns="http://nant.sf.net/release/0.86-beta1/nant.xsd">

	<!-- Base directories. -->
	<property name="basedir.app"
			  value="${path::combine(project::get-base-directory(), 'source\app')}"
			  unless="${property::exists('basedir.app')}" />

	<property name="basedir.test"
			  value="${path::combine(project::get-base-directory(), 'source\test')}"
			  unless="${property::exists('basedir.test')}" />

	<property name="basedir.deployment.artifacts"
			  value="${path::combine(project::get-base-directory(), 'deploy')}"
			  unless="${property::exists('deployment.artifacts')}" />

	<property name="basedir.deployment.targetpath"
			  value=""
			  unless="${property::exists('basedir.deployment.targetpath')}" />

	<property name="basedir.database"
			  value="${path::combine(project::get-base-directory(), 'source\database')}"
			  unless="${property::exists('basedir.database')}" />

	<!-- Build configuration. -->
	<property name="build.msbuild.target"
			  value="Build"
			  unless="${property::exists('build.msbuild.target')}" />

	<property name="build.msbuild.configuration"
			  value="Debug"
			  unless="${property::exists('build.msbuild.configuration')}" />

	<property name="build.msbuild.verbosity"
			  value="Minimal"
			  unless="${property::exists('build.msbuild.verbosity')}" />

	<property name="build.msbuild.solutiondir"
			  value="${path::combine(project::get-base-directory(), 'source\\')}"
			  unless="${property::exists('build.msbuild.solutiondir')}" />

	<property name="test.results"
			  value="${path::combine(project::get-base-directory(), 'test-results')}"
			  unless="${property::exists('test.results')}" />

	<property name="tools.mbunit"
			  value="${path::combine(project::get-base-directory(), 'tools\MbUnit')}"
			  unless="${property::exists('tools.mbunit')}" />

	<property name="tools.sqlpub"
			  value="${path::combine(project::get-base-directory(), 'tools\SqlPub')}"
			  unless="${property::exists('tools.sqlpub')}" />

	<!-- Database configuration. -->
	<property name="database.name"
			  value="Graffiti_Test_${project::get-name()}"
			  unless="${property::exists('database.name')}" />

	<property name="database.server"
			  value="(local)"
			  unless="${property::exists('database.server')}" />

	<property name="database.auth.integrated"
			  value="true"
			  unless="${property::exists('database.auth.integrated')}" />

	<property name="database.auth.username"
			  value="foo"
			  unless="${property::exists('database.auth.username')}" />

	<property name="database.auth.password"
			  value="foo"
			  unless="${property::exists('database.auth.password')}" />

	<property name="database.connectionstring"
			  value="Data Source=${database.server}; Initial Catalog=${database.name}; Integrated Security=true; Persist Security Info=false;"
			  if="${bool::parse(database.auth.integrated) == true}"
			  unless="${property::exists('database.connectionstring')}" />

	<property name="database.connectionstring"
			  value="Data Source=${database.server}; Initial Catalog=${database.name}; User ID=${database.auth.username}; Password=${database.auth.password};"
			  if="${bool::parse(database.auth.integrated) == false}"
			  unless="${property::exists('database.connectionstring')}" />

	<property name="database.connectionstring.oledb"
			  value="Provider=SQLNCLI.1; ${string::replace(database.connectionstring, 'Integrated Security=true;', 'Integrated Security=SSPI;')}"
			  unless="${property::exists('database.connectionstring.oledb')}" />

	<!-- Get build number. -->
	<!-- Use build number from source\VersionInfo.cs. -->
	<call target="get-build-number-from-file" />

	<property name="build.number"
			  value="${build.number.fromfile}"
			  if="${not environment::variable-exists('BUILD_NUMBER') and not property::exists('build.number')}" />

	<!-- Use build number from environment variable. -->
	<property name="build.number"
			  value="${environment::get-variable('BUILD_NUMBER')}"
			  if="${environment::variable-exists('BUILD_NUMBER') and not property::exists('build.number')}" />
</project>